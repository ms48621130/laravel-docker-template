一覧画面の表示機能の作成

流れについては以下画像参照
https://res.cloudinary.com/gizumo-inc/image/upload/v1713129945/curriculums/Laravel%20Lesson/App/index_mvc.png

①一覧画面のURI(URL)の設定
PHP Appレッスンでは、直前のURIごとに実行する処理を変更する関数を定義していたが、
Laravelでは、URI(URL)とHTTPメソッドの組み合わせで実行する処理を変更することができる。

URI(URL)とHTTPメソッドの組み合わせで実行する処理を指定することをルート定義と呼ぶ。
ルート定義は、routes/web.phpに記述する必要がある。

routes/web.phpに以下を記述

Route::get('/todo', function () {
    echo 'Hello World!';
});

Route::get()はHTTPメソッドのGETを示しており、getメソッドの第一引数がURIを示している。
第二引数にそのURI(URL)とHTTPメソッドの組み合わせで実行したい処理を記述することでルートを定義することができる。


②一覧画面を表示
todoにアクセスした際に実行したい処理をroutes/web.phpに記載したが、
実行したい処理はControllerに移した方が保守性の観点から望ましい。

Controllerに処理を移すには、Route::get()の第二引数に対象のControllerとそのメソッドを指定する必要がある。
今回はTodoControllerのindexメソッドに処理を移譲する。

# appコンテナ内に以下コマンド
php artisan make:controller TodoController

routes/web.phpの記述を以下に変更
Route::get('/todo', 'TodoController@index');

TodoController.phpに処理内容を記述

一覧画面であるresources/views/todo/index.blade.phpを作成し、中身を記述

TodoController.phpの記述を変更
view関数を用いることで、画面として表示したいHTMLを指定することができる。
view関数の引数には、表示させたいBladeファイルを指定する必要があり、「resources/views/から対象の*.blade.phpまでの相対パスを.区切りで指定」する。


③DBに登録されているデータを取得する
④取得したデータを画面に渡す
⑤画面上にデータを表示する


